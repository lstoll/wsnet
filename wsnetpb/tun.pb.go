// Code generated by protoc-gen-go.
// source: wsnetpb/tun.proto
// DO NOT EDIT!

/*
Package wsnetpb is a generated protocol buffer package.

It is generated from these files:
	wsnetpb/tun.proto

It has these top-level messages:
	ConnectionInit
	ConnectionClose
	Request
	Response
*/
package wsnetpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ConnectionInit struct {
}

func (m *ConnectionInit) Reset()                    { *m = ConnectionInit{} }
func (m *ConnectionInit) String() string            { return proto.CompactTextString(m) }
func (*ConnectionInit) ProtoMessage()               {}
func (*ConnectionInit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ConnectionClose struct {
}

func (m *ConnectionClose) Reset()                    { *m = ConnectionClose{} }
func (m *ConnectionClose) String() string            { return proto.CompactTextString(m) }
func (*ConnectionClose) ProtoMessage()               {}
func (*ConnectionClose) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Request struct {
	// token is the identifier for the referred connection
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Types that are valid to be assigned to Msg:
	//	*Request_ConnectionInit
	//	*Request_ConnectionClose
	//	*Request_ConnectionData
	Msg isRequest_Msg `protobuf_oneof:"msg"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isRequest_Msg interface {
	isRequest_Msg()
}

type Request_ConnectionInit struct {
	ConnectionInit *ConnectionInit `protobuf:"bytes,2,opt,name=connection_init,json=connectionInit,oneof"`
}
type Request_ConnectionClose struct {
	ConnectionClose *ConnectionClose `protobuf:"bytes,3,opt,name=connection_close,json=connectionClose,oneof"`
}
type Request_ConnectionData struct {
	ConnectionData []byte `protobuf:"bytes,4,opt,name=connection_data,json=connectionData,proto3,oneof"`
}

func (*Request_ConnectionInit) isRequest_Msg()  {}
func (*Request_ConnectionClose) isRequest_Msg() {}
func (*Request_ConnectionData) isRequest_Msg()  {}

func (m *Request) GetMsg() isRequest_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *Request) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *Request) GetConnectionInit() *ConnectionInit {
	if x, ok := m.GetMsg().(*Request_ConnectionInit); ok {
		return x.ConnectionInit
	}
	return nil
}

func (m *Request) GetConnectionClose() *ConnectionClose {
	if x, ok := m.GetMsg().(*Request_ConnectionClose); ok {
		return x.ConnectionClose
	}
	return nil
}

func (m *Request) GetConnectionData() []byte {
	if x, ok := m.GetMsg().(*Request_ConnectionData); ok {
		return x.ConnectionData
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Request_OneofMarshaler, _Request_OneofUnmarshaler, _Request_OneofSizer, []interface{}{
		(*Request_ConnectionInit)(nil),
		(*Request_ConnectionClose)(nil),
		(*Request_ConnectionData)(nil),
	}
}

func _Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Request)
	// msg
	switch x := m.Msg.(type) {
	case *Request_ConnectionInit:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConnectionInit); err != nil {
			return err
		}
	case *Request_ConnectionClose:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConnectionClose); err != nil {
			return err
		}
	case *Request_ConnectionData:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.ConnectionData)
	case nil:
	default:
		return fmt.Errorf("Request.Msg has unexpected type %T", x)
	}
	return nil
}

func _Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Request)
	switch tag {
	case 2: // msg.connection_init
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConnectionInit)
		err := b.DecodeMessage(msg)
		m.Msg = &Request_ConnectionInit{msg}
		return true, err
	case 3: // msg.connection_close
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConnectionClose)
		err := b.DecodeMessage(msg)
		m.Msg = &Request_ConnectionClose{msg}
		return true, err
	case 4: // msg.connection_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Msg = &Request_ConnectionData{x}
		return true, err
	default:
		return false, nil
	}
}

func _Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Request)
	// msg
	switch x := m.Msg.(type) {
	case *Request_ConnectionInit:
		s := proto.Size(x.ConnectionInit)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_ConnectionClose:
		s := proto.Size(x.ConnectionClose)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_ConnectionData:
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.ConnectionData)))
		n += len(x.ConnectionData)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Response struct {
	// token is the identifier for the referred connection
	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Types that are valid to be assigned to Msg:
	//	*Response_ConnectionClose
	//	*Response_ConnectionData
	Msg isResponse_Msg `protobuf_oneof:"msg"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type isResponse_Msg interface {
	isResponse_Msg()
}

type Response_ConnectionClose struct {
	ConnectionClose *ConnectionClose `protobuf:"bytes,2,opt,name=connection_close,json=connectionClose,oneof"`
}
type Response_ConnectionData struct {
	ConnectionData []byte `protobuf:"bytes,3,opt,name=connection_data,json=connectionData,proto3,oneof"`
}

func (*Response_ConnectionClose) isResponse_Msg() {}
func (*Response_ConnectionData) isResponse_Msg()  {}

func (m *Response) GetMsg() isResponse_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *Response) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *Response) GetConnectionClose() *ConnectionClose {
	if x, ok := m.GetMsg().(*Response_ConnectionClose); ok {
		return x.ConnectionClose
	}
	return nil
}

func (m *Response) GetConnectionData() []byte {
	if x, ok := m.GetMsg().(*Response_ConnectionData); ok {
		return x.ConnectionData
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Response) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Response_OneofMarshaler, _Response_OneofUnmarshaler, _Response_OneofSizer, []interface{}{
		(*Response_ConnectionClose)(nil),
		(*Response_ConnectionData)(nil),
	}
}

func _Response_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Response)
	// msg
	switch x := m.Msg.(type) {
	case *Response_ConnectionClose:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConnectionClose); err != nil {
			return err
		}
	case *Response_ConnectionData:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.ConnectionData)
	case nil:
	default:
		return fmt.Errorf("Response.Msg has unexpected type %T", x)
	}
	return nil
}

func _Response_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Response)
	switch tag {
	case 2: // msg.connection_close
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConnectionClose)
		err := b.DecodeMessage(msg)
		m.Msg = &Response_ConnectionClose{msg}
		return true, err
	case 3: // msg.connection_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Msg = &Response_ConnectionData{x}
		return true, err
	default:
		return false, nil
	}
}

func _Response_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Response)
	// msg
	switch x := m.Msg.(type) {
	case *Response_ConnectionClose:
		s := proto.Size(x.ConnectionClose)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_ConnectionData:
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.ConnectionData)))
		n += len(x.ConnectionData)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*ConnectionInit)(nil), "wsnet.ConnectionInit")
	proto.RegisterType((*ConnectionClose)(nil), "wsnet.ConnectionClose")
	proto.RegisterType((*Request)(nil), "wsnet.Request")
	proto.RegisterType((*Response)(nil), "wsnet.Response")
}

func init() { proto.RegisterFile("wsnetpb/tun.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x2f, 0xce, 0x4b,
	0x2d, 0x29, 0x48, 0xd2, 0x2f, 0x29, 0xcd, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05,
	0x0b, 0x29, 0x09, 0x70, 0xf1, 0x39, 0xe7, 0xe7, 0xe5, 0xa5, 0x26, 0x97, 0x64, 0xe6, 0xe7, 0x79,
	0xe6, 0x65, 0x96, 0x28, 0x09, 0x72, 0xf1, 0x23, 0x44, 0x9c, 0x73, 0xf2, 0x8b, 0x53, 0x95, 0x6e,
	0x30, 0x72, 0xb1, 0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x89, 0x70, 0xb1, 0x96, 0xe4,
	0x67, 0xa7, 0xe6, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x04, 0x41, 0x38, 0x42, 0x0e, 0x5c, 0xfc,
	0xc9, 0x70, 0x4d, 0xf1, 0x99, 0x79, 0x99, 0x25, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0xa2,
	0x7a, 0x60, 0x7b, 0xf4, 0x50, 0x2d, 0xf1, 0x60, 0x08, 0xe2, 0x4b, 0x46, 0x11, 0x11, 0x72, 0xe6,
	0x12, 0x40, 0x32, 0x21, 0x19, 0x64, 0xaf, 0x04, 0x33, 0xd8, 0x08, 0x31, 0x0c, 0x23, 0xc0, 0xae,
	0xf2, 0x60, 0x08, 0x42, 0xb2, 0x13, 0x2c, 0x24, 0xa4, 0x89, 0xe2, 0x8c, 0x94, 0xc4, 0x92, 0x44,
	0x09, 0x16, 0x90, 0x33, 0x51, 0xed, 0x73, 0x49, 0x2c, 0x49, 0x74, 0x62, 0xe5, 0x62, 0xce, 0x2d,
	0x4e, 0x57, 0x9a, 0xce, 0xc8, 0xc5, 0x11, 0x94, 0x5a, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x8a, 0xc3,
	0x6f, 0xd8, 0x5c, 0xc6, 0x44, 0x05, 0x97, 0x31, 0xe3, 0x75, 0x99, 0x13, 0x67, 0x14, 0x3b, 0x34,
	0xd6, 0x92, 0xd8, 0xc0, 0x51, 0x66, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xa6, 0x31, 0x9c, 0x24,
	0xc7, 0x01, 0x00, 0x00,
}
